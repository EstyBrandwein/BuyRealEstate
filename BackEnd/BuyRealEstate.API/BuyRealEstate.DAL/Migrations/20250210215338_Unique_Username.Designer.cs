// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BuyRealEstate.Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250210215338_Unique_Username")]
    partial class Unique_Username
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BuyRealEstate.Domain.Models.DevelopmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DevelopmentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = 0,
                            ProjectID = 0,
                            State = false,
                            Status = "הפיתוח בעיצומו",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUser = 0
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InsertUser = 0,
                            ProjectID = 0,
                            State = false,
                            Status = "הפיתוח הושלם",
                            UpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateUser = 0
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<byte[]>("DocumentData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int?>("PamentID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("isRecipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PamentID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("UserId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Guarantees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<bool>("GuaranteeUssued")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("VoucherNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Guarantees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 87643,
                            DateOfPayment = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(9311),
                            GuaranteeUssued = true,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(238),
                            InsertUser = 1,
                            IsPaid = false,
                            Note = "עוד לא שולם",
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(245),
                            UpdateUser = 1,
                            VoucherNumber = 4
                        },
                        new
                        {
                            Id = 2,
                            Amount = 673829,
                            DateOfPayment = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(249),
                            GuaranteeUssued = false,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(251),
                            InsertUser = 1,
                            IsPaid = false,
                            Note = "עוד לא שולם",
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(252),
                            UpdateUser = 1,
                            VoucherNumber = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 3572,
                            DateOfPayment = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(255),
                            GuaranteeUssued = true,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(256),
                            InsertUser = 1,
                            IsPaid = true,
                            Note = "שולם",
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 135, DateTimeKind.Local).AddTicks(257),
                            UpdateUser = 1,
                            VoucherNumber = 3
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.LegalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LegalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 131, DateTimeKind.Local).AddTicks(744),
                            InsertUser = 1,
                            ProjectID = 0,
                            State = true,
                            Status = "בשלבי רכישה",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(1728),
                            UpdateUser = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2626),
                            InsertUser = 1,
                            ProjectID = 0,
                            State = true,
                            Status = "הושלמה על שם הנאמן",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2636),
                            UpdateUser = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2639),
                            InsertUser = 1,
                            ProjectID = 0,
                            State = true,
                            Status = "בתהליכי רישום ברשות המיסים",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2641),
                            UpdateUser = 1
                        },
                        new
                        {
                            Id = 4,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2643),
                            InsertUser = 1,
                            ProjectID = 0,
                            State = true,
                            Status = "העסקה רשומה על שימכם",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(2644),
                            UpdateUser = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Payment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataValue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datereference")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detiels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HNagainst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentExecutionMethodID")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionalId")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<int>("Surplus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToWhere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("dose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PaymentExecutionMethodID");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("ProfessionalId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amount = 360000.0,
                            DataValue = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(4721),
                            Datereference = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(4933),
                            Detiels = "hello",
                            HNagainst = "100001",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5679),
                            InsertUser = 1,
                            LastPaymentDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5688),
                            PaymentExecutionMethodID = 1,
                            PaymentStatusId = 1,
                            ProfessionalId = 4,
                            State = true,
                            Surplus = 12000,
                            Title = "פתיחת תיק",
                            ToWhere = "לקנות נדלן",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5687),
                            UpdateUser = 1,
                            dose = "9997",
                            movement = "חובה"
                        },
                        new
                        {
                            ID = 2,
                            Amount = 420000.0,
                            DataValue = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5888),
                            Datereference = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5894),
                            Detiels = "hello",
                            HNagainst = "189002",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5896),
                            InsertUser = 1,
                            LastPaymentDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5899),
                            PaymentExecutionMethodID = 1,
                            PaymentStatusId = 2,
                            ProfessionalId = 4,
                            State = true,
                            Surplus = 13000,
                            Title = "דמי נאמנות",
                            ToWhere = "נאמנות",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5898),
                            UpdateUser = 1,
                            dose = "9997",
                            movement = "חובה"
                        },
                        new
                        {
                            ID = 3,
                            Amount = 260000.0,
                            DataValue = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5902),
                            Datereference = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5903),
                            Detiels = "hello",
                            HNagainst = "127682",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5936),
                            InsertUser = 1,
                            LastPaymentDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5939),
                            PaymentExecutionMethodID = 1,
                            PaymentStatusId = 3,
                            ProfessionalId = 4,
                            State = true,
                            Surplus = 14000,
                            Title = "רשות המיסים",
                            ToWhere = "עורך דין",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(5938),
                            UpdateUser = 1,
                            dose = "9997",
                            movement = "זכות"
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.PaymentExecutionMethod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PaymentExecutionMethods");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "אשראי",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6786),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6795),
                            UpdateUser = 1
                        },
                        new
                        {
                            ID = 2,
                            Description = "העברה בנקאית",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6799),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6800),
                            UpdateUser = 1
                        },
                        new
                        {
                            ID = 3,
                            Description = "ציק",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6802),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6803),
                            UpdateUser = 1
                        },
                        new
                        {
                            ID = 4,
                            Description = "מזומן",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6805),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(6806),
                            UpdateUser = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.PaymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PaymentStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7591),
                            InsertUser = 1,
                            State = true,
                            Status = "לא שולם",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7601),
                            UpdateUser = 1
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7605),
                            InsertUser = 1,
                            State = true,
                            Status = "מחכה לאישור",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7606),
                            UpdateUser = 1
                        },
                        new
                        {
                            Id = 3,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7608),
                            InsertUser = 1,
                            State = true,
                            Status = "שולם",
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(7610),
                            UpdateUser = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("permission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8373),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8381),
                            UpdateUser = 1,
                            permission = "מנהל"
                        },
                        new
                        {
                            Id = 2,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8385),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8386),
                            UpdateUser = 1,
                            permission = "מזכירה"
                        },
                        new
                        {
                            Id = 3,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8388),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8389),
                            UpdateUser = 1,
                            permission = "לקוח"
                        },
                        new
                        {
                            Id = 4,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8391),
                            InsertUser = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 133, DateTimeKind.Local).AddTicks(8392),
                            UpdateUser = 1,
                            permission = "איש קשר"
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Plot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("BuildingCost")
                        .HasColumnType("int");

                    b.Property<int>("Equity")
                        .HasColumnType("int");

                    b.Property<int>("Ground")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("ManagmentCost")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyFundingCost")
                        .HasColumnType("float");

                    b.Property<int>("MonthsForFundingCost")
                        .HasColumnType("int");

                    b.Property<int>("PlotCost")
                        .HasColumnType("int");

                    b.Property<int>("PlotNumber")
                        .HasColumnType("int");

                    b.Property<double>("PlotSize")
                        .HasColumnType("float");

                    b.Property<double>("PlotValue")
                        .HasColumnType("float");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Plots");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            BuildingCost = 0,
                            Equity = 0,
                            Ground = 0,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(514),
                            InsertUser = 1,
                            ManagmentCost = 0,
                            MonthlyFundingCost = 10000.0,
                            MonthsForFundingCost = 10,
                            PlotCost = 580000,
                            PlotNumber = 12,
                            PlotSize = 120.0,
                            PlotValue = 600000.0,
                            ProjectId = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(525),
                            UpdateUser = 1,
                            UserId = 1
                        },
                        new
                        {
                            ID = 2,
                            BuildingCost = 0,
                            Equity = 0,
                            Ground = 0,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(552),
                            InsertUser = 1,
                            ManagmentCost = 0,
                            MonthlyFundingCost = 10000.0,
                            MonthsForFundingCost = 10,
                            PlotCost = 580000,
                            PlotNumber = 11,
                            PlotSize = 138.0,
                            PlotValue = 600000.0,
                            ProjectId = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(554),
                            UpdateUser = 1,
                            UserId = 1
                        },
                        new
                        {
                            ID = 3,
                            BuildingCost = 0,
                            Equity = 0,
                            Ground = 0,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(557),
                            InsertUser = 1,
                            ManagmentCost = 0,
                            MonthlyFundingCost = 10000.0,
                            MonthsForFundingCost = 10,
                            PlotCost = 580000,
                            PlotNumber = 13,
                            PlotSize = 110.0,
                            PlotValue = 600000.0,
                            ProjectId = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(559),
                            UpdateUser = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DeveloperStatusID")
                        .HasColumnType("int");

                    b.Property<double>("GrossProfit")
                        .HasColumnType("float");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("LegalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("LinkToLead2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectManagerID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProjectType")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DeveloperStatusID");

                    b.HasIndex("LegalStatusId");

                    b.HasIndex("ProjectManagerID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DeveloperStatusID = 1,
                            GrossProfit = 12000.0,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(5217),
                            InsertUser = 1,
                            LegalStatusId = 1,
                            LinkToLead2 = "https://www.efshar-nadlan.co.il/",
                            ProjectAddress = "כרמית",
                            ProjectManagerID = 1,
                            ProjectName = "כרמית 11",
                            ProjectType = true,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(5226),
                            UpdateUser = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipCustomersPlots", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("PlotID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlotID");

                    b.HasIndex("UserID");

                    b.ToTable("CustomerPlots");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(6151),
                            InsertUser = 1,
                            PlotID = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(6160),
                            UpdateUser = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipPaymentsPlots", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("PlotID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("paymentStutusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaymentID");

                    b.HasIndex("PlotID");

                    b.HasIndex("paymentStutusID");

                    b.ToTable("PlotPayments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(7177),
                            InsertUser = 1,
                            PaymentID = 1,
                            PlotID = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(7186),
                            UpdateUser = 1,
                            paymentStutusID = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipPaymentsProjects", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<int>("PaymentID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<int>("paymentStutusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PaymentID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("paymentStutusID");

                    b.ToTable("ProjectPayments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(8396),
                            InsertUser = 1,
                            PaymentID = 1,
                            ProjectID = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(8406),
                            UpdateUser = 1,
                            paymentStutusID = 1
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUser")
                        .HasColumnType("int");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("SecendPhon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUser")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationCodeExpiry")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("PermissionId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "chayamalot@gmail.com",
                            FirstName = "חיה",
                            FirstPhone = "0504101585",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(8586),
                            InsertUser = 1,
                            IsVerified = true,
                            LastName = "ברנדויין",
                            Password = "CB5328152",
                            PermissionId = 1,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(8590),
                            UpdateUser = 1,
                            Username = "ChayaB",
                            VerificationCode = ""
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Professional", b =>
                {
                    b.HasBaseType("BuyRealEstate.Domain.Models.User");

                    b.Property<string>("Professtion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Professional");

                    b.HasData(
                        new
                        {
                            ID = 4,
                            Email = "ghj@hjj",
                            FirstName = "רשות",
                            FirstPhone = "050141155",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(3280),
                            InsertUser = 1,
                            IsVerified = true,
                            LastName = "המיסים",
                            Password = "123456",
                            PermissionId = 4,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(3289),
                            UpdateUser = 1,
                            Username = "רשות המיסים",
                            VerificationCode = "",
                            Professtion = "מיסים",
                            WebsiteAddress = "https://www.efshar-nadlan.co.il"
                        },
                        new
                        {
                            ID = 5,
                            Email = "royi@grilak",
                            FirstName = "רועי",
                            FirstPhone = "0556565626",
                            InsertDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(3296),
                            InsertUser = 1,
                            IsVerified = true,
                            LastName = "גרילק",
                            Password = "123456",
                            PermissionId = 4,
                            State = true,
                            UpdateDate = new DateTime(2025, 2, 10, 23, 53, 37, 134, DateTimeKind.Local).AddTicks(3297),
                            UpdateUser = 1,
                            Username = "עורך דין",
                            VerificationCode = "",
                            Professtion = "עריכת דין",
                            WebsiteAddress = ""
                        });
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Document", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Payment", "Payment")
                        .WithMany("PaymentConfirmation")
                        .HasForeignKey("PamentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BuyRealEstate.Domain.Models.Project", "Project")
                        .WithMany("Documents")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("BuyRealEstate.Domain.Models.User", "User")
                        .WithMany("Documents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Payment");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Image", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Project", "Project")
                        .WithMany("Images")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Payment", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.PaymentExecutionMethod", "PaymentExecutionMethod")
                        .WithMany("Payment")
                        .HasForeignKey("PaymentExecutionMethodID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.Professional", "Professional")
                        .WithMany("Payments")
                        .HasForeignKey("ProfessionalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaymentExecutionMethod");

                    b.Navigation("PaymentStatus");

                    b.Navigation("Professional");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Plot", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Project", "Project")
                        .WithMany("Plots")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.User", "User")
                        .WithMany("plots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Project", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.DevelopmentStatus", "DeveloperStatus")
                        .WithMany("Project")
                        .HasForeignKey("DeveloperStatusID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.LegalStatus", "LegalStatus")
                        .WithMany("Projects")
                        .HasForeignKey("LegalStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.User", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeveloperStatus");

                    b.Navigation("LegalStatus");

                    b.Navigation("ProjectManager");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipCustomersPlots", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Plot", "Plot")
                        .WithMany()
                        .HasForeignKey("PlotID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plot");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipPaymentsPlots", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Payment", "payment")
                        .WithMany("PaymentPlots")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.Plot", "plot")
                        .WithMany("PaymentPlots")
                        .HasForeignKey("PlotID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.PaymentStatus", "paymentStutus")
                        .WithMany()
                        .HasForeignKey("paymentStutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("payment");

                    b.Navigation("paymentStutus");

                    b.Navigation("plot");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.RelationshipPaymentsProjects", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Payment", "payment")
                        .WithMany("PaymentProject")
                        .HasForeignKey("PaymentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.Project", "project")
                        .WithMany("PaymentProject")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BuyRealEstate.Domain.Models.PaymentStatus", "paymentStutus")
                        .WithMany()
                        .HasForeignKey("paymentStutusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("payment");

                    b.Navigation("paymentStutus");

                    b.Navigation("project");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.User", b =>
                {
                    b.HasOne("BuyRealEstate.Domain.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.DevelopmentStatus", b =>
                {
                    b.Navigation("Project");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.LegalStatus", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Payment", b =>
                {
                    b.Navigation("PaymentConfirmation");

                    b.Navigation("PaymentPlots");

                    b.Navigation("PaymentProject");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.PaymentExecutionMethod", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Plot", b =>
                {
                    b.Navigation("PaymentPlots");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Project", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Images");

                    b.Navigation("PaymentProject");

                    b.Navigation("Plots");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("plots");
                });

            modelBuilder.Entity("BuyRealEstate.Domain.Models.Professional", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
